
# Create an OpenGL view:
/vis/open OGL 600x600-0+0

# viewing in DAWN:
#/vis/open DAWNFILE

# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors

# make background white
/vis/viewer/set/background 1 1 1

# do not draw the world volume
/vis/geometry/set/visibility world_logical 0 false

# target color set to be blue
# numerical parameters are in order:  depth R G B Opacity
/vis/geometry/set/colour target_logical 0 0.0 0.3 0.6 1.0
/vis/geometry/set/forceSolid target_logical 0 1

/vis/geometry/set/colour coating_logical 0 1.0 0.0 1.0 1.0
/vis/geometry/set/forceSolid coating_logical 0 1

# Draw geometry:
/vis/drawVolume


# Specify view angle:
/vis/viewer/set/viewpointThetaPhi -90. 180.

# Specify zoom value:
/vis/viewer/zoom 1.4

# Specify style (surface, wireframe, auxiliary edges,...)
/vis/viewer/set/style wireframe
/vis/viewer/set/auxiliaryEdge true
/vis/viewer/set/lineSegmentsPerCircle 100


# Draw coordinate axes:
#/vis/scene/add/axes 0 0 0 1 m

# Draw smooth trajectories at end of event, showing trajectory points, as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2

# Draw hits at end of event:
/vis/scene/add/hits

# To draw only gammas:
#/vis/filtering/trajectories/create/particleFilter
#/vis/filtering/trajectories/particleFilter-0/add gamma
#
# To invert the above, drawing all particles except gammas,
# keep the above two lines but also add:
#/vis/filtering/trajectories/particleFilter-0/invert true


# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate

# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings

